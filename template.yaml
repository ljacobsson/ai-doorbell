AWSTemplateFormatVersion: 2010-09-09
Transform:
  - 'AWS::Serverless-2016-10-31'
Parameters:
  ToEmail:
    Type: String
  FromEmail:
    Type: String
  IpRange:
    Type: String
Globals:
  Function:
    Runtime: nodejs14.x
    MemorySize: 128
    Timeout: 15
Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
  GetUrl:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: src/GetUrl.handler
      Environment:
        Variables:
          BucketName: !Ref S3Bucket
      Events:
        GetItem:
          Type: Api
          Properties:
            Method: get
            Path: /url
            Auth:
              ResourcePolicy:
                IpRangeWhitelist:
                  - !Ref IpRange
      Policies:
        - S3WritePolicy:
            BucketName: !Ref S3Bucket
  BatteryReport:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: src/BatteryReport.handler
      Environment:
        Variables:
          FromEmailAddress: !Ref FromEmail
          ToEmailAddress: !Ref ToEmail
      Events:
        PutItem:
          Type: Api
          Properties:
            Method: put
            Path: /battery
            Auth:
              ResourcePolicy:
                IpRangeWhitelist:
                  - !Ref IpRange
      Policies:
        - Version: 2012-10-17
          Statement:
            - Sid: Statement1
              Effect: Allow
              Action:
                - 'ses:SendEmail'
              Resource: 
                - '*'
  StateMachine:
    Type: 'AWS::Serverless::StateMachine'
    Properties:
      Policies:
        - Version: 2012-10-17
          Statement:
            - Sid: Statement1
              Effect: Allow
              Action:
                - 'rekognition:DetectFaces'
                - 'rekognition:DetectLabels'
              Resource:
                - '*'
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket
        - LambdaInvokePolicy:
            FunctionName: !Ref FaceDescription
        - LambdaInvokePolicy:
            FunctionName: !Ref CombineDescriptions
        - Version: 2012-10-17
          Statement:
            - Sid: Statement1
              Effect: Allow
              Action:
                - 'ses:SendEmail'
              Resource:
                - '*'
        - Version: 2012-10-17
          Statement:
            - Sid: Statement1
              Effect: Allow
              Action:
                - 'polly:StartSpeechSynthesisTask'
                - 'polly:synthesizeSpeech'
              Resource:
                - '*'
        - LambdaInvokePolicy:
            FunctionName: !Ref GetSignedImageURL
        - LambdaInvokePolicy:
            FunctionName: !Ref SynthesizeSpeech
      Definition:
        StartAt: Parallel image analysis
        States:
          Parallel image analysis:
            Type: Parallel
            Next: Has faces?
            Branches:
              - StartAt: Detect faces
                States:
                  Detect faces:
                    Parameters:
                      Attributes:
                        - ALL
                      Image:
                        S3Object:
                          Bucket: !Ref S3Bucket
                          Name.$: $.key
                    Resource: arn:aws:states:::aws-sdk:rekognition:detectFaces
                    Type: Task
                    End: true
              - StartAt: Detect labels
                States:
                  Detect labels:
                    Type: Task
                    End: true
                    Parameters:
                      Image:
                        S3Object:
                          Bucket: !Ref S3Bucket
                          Name.$: $.key
                    Resource: arn:aws:states:::aws-sdk:rekognition:detectLabels
          Has faces?:
            Type: Choice
            Choices:
              - Variable: '$[0].FaceDetails[0]'
                IsPresent: false
                Next: Generic message
            Default: For each face
          Generic message:
            Type: Pass
            Result:
              message: There's someone at the door!
              imageUrl: ''
            Next: Send message to notification channels
          For each face:
            Type: Map
            ItemsPath: $[0].FaceDetails
            ResultPath: $[0]
            Iterator:
              StartAt: Build face description string
              States:
                Build face description string:
                  Type: Task
                  Resource: 'arn:aws:states:::lambda:invoke'
                  OutputPath: $.Payload
                  Parameters:
                    Payload.$: $
                    FunctionName: !GetAtt FaceDescription.Arn
                  Retry:
                    - ErrorEquals:
                        - Lambda.ServiceException
                        - Lambda.AWSLambdaException
                        - Lambda.SdkClientException
                      IntervalSeconds: 2
                      MaxAttempts: 6
                      BackoffRate: 2
                  End: true
            Next: Combine descriptions
          Combine descriptions:
            Type: Task
            Resource: 'arn:aws:states:::lambda:invoke'
            OutputPath: $.Payload
            Parameters:
              Payload:
                Descriptions.$: $[0]
                Labels.$: $[1]
                Key.$: $$.Execution.Input.key
                Bucket: !Ref S3Bucket
              FunctionName: !GetAtt CombineDescriptions.Arn
            Retry:
              - ErrorEquals:
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                IntervalSeconds: 2
                MaxAttempts: 6
                BackoffRate: 2
            Next: Send message to notification channels
          Send message to notification channels:
            Type: Parallel
            End: true
            Branches:
              - StartAt: Get signed image URL
                States:
                  Get signed image URL:
                    Type: Task
                    Resource: arn:aws:states:::lambda:invoke
                    ResultSelector:
                      url.$: $.Payload
                    ResultPath: $.image
                    Parameters:
                      Payload:
                        Key.$: $$.Execution.Input.key
                      FunctionName: !GetAtt GetSignedImageURL.Arn
                    Retry:
                      - ErrorEquals:
                          - Lambda.ServiceException
                          - Lambda.AWSLambdaException
                          - Lambda.SdkClientException
                        IntervalSeconds: 2
                        MaxAttempts: 6
                        BackoffRate: 2
                    Next: Send email
                  Send email:
                    End: true
                    Parameters:
                      Destination:
                        ToAddresses:
                          - !Ref ToEmail
                      Message:
                        Body:
                          Html:
                            Charset: UTF-8
                            Data.$: >-
                              States.Format('{}<br><img src="{}">', $.message,
                              $.image.url)
                        Subject:
                          Charset: UTF-8
                          Data: Doorbell
                      Source: !Ref FromEmail
                    Resource: arn:aws:states:::aws-sdk:ses:sendEmail
                    Type: Task
              - StartAt: Synthesise speech
                States:
                  Synthesise speech:
                    Type: Task
                    Resource: 'arn:aws:states:::lambda:invoke'
                    OutputPath: $.Payload
                    Parameters:
                      Payload.$: $
                      FunctionName: !GetAtt SynthesizeSpeech.Arn
                    Retry:
                      - ErrorEquals:
                          - Lambda.ServiceException
                          - Lambda.AWSLambdaException
                          - Lambda.SdkClientException
                        IntervalSeconds: 2
                        MaxAttempts: 6
                        BackoffRate: 2
                    End: true
      Events:
        S3Event:
          Type: EventBridgeRule
          Properties:
            EventBusName: default
            InputPath: $.detail.object
            Pattern:
              source:
                - aws.s3
              detail-type:
                - Object Created
              detail:
                bucket:
                  name:
                    - !Ref S3Bucket
                object:
                  key:
                    - prefix: image/
  FaceDescription:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: .
      Handler: src/FaceDescription.handler
      Runtime: nodejs14.x
      Timeout: 10
  CombineDescriptions:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: .
      Handler: src/CombineDescriptions.handler
      Runtime: nodejs14.x
      Timeout: 10
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref S3Bucket
  SynthesizeSpeech:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: .
      Handler: src/SynthesizeSpeech.handler
      Runtime: nodejs14.x
      Timeout: 10
      Environment:
        Variables:
          BucketName: !Ref S3Bucket
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket
        - Version: 2012-10-17
          Statement:
            - Sid: Statement1
              Effect: Allow
              Action:
                - 'polly:SynthesizeSpeech'
              Resource:
                - '*'
        - Version: 2012-10-17
          Statement:
            - Sid: Statement1
              Effect: Allow
              Action:
                - 'iot:Publish'
              Resource:
                - '*'
  GetSignedImageURL:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: .
      Handler: src/GetSignedImageURL.handler
      Runtime: nodejs14.x
      Timeout: 10
      Environment:
        Variables:
          BucketName: !Ref S3Bucket
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref S3Bucket
